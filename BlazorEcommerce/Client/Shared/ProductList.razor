@inject IProductService ProductService

@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
    <Loader />
}
else
{   
<ul class="grid grid-cols-3 gap-4 ">
        @foreach (var product in ProductService.Products)
        {
            <li class="border rounded-md">
                <div class="bg-white shadow-md rounded-lg overflow-hidden">
                    <div class="px-4 py-2">
                        <a class="text-gray-900 font-bold text-2xl hover:text-blue-500" href="product/@product.Id">@product.Title</a>
                        <p class="text-gray-600 text-sm">@product.Description</p>
                    </div>
                    <img class=" w-full object-cover object-top mt-2 scale-100 hover:scale-75 duration-700" src="@product.ImageURL" alt="Sunset in the mountains">
                    <div class="flex items-center justify-between px-4 py-2 bg-gray-900">
                        <h1 class="text-gray-200 font-bold text-xl">$@product.Price</h1>
                        <button class="px-3 py-2 bg-gray-200 text-gray-800 font-bold rounded hover:bg-black duration-150 hover:text-white hover:ring">Add to cart</button>
                    </div>
                </div>
            </li>

        }
    </ul> 
}


@code {

    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetProducts();

    }

}
